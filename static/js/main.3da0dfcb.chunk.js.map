{"version":3,"sources":["Components/Items/Item/Item.module.css","Components/Items/Description/Description.module.css","Components/Sidebar/Sidebar.module.css","Components/Items/Items.module.css","Components/Header/Header.module.css","Assets/images/kolo.png","Assets/fonts/Gabriela-Regular.ttf","Components/Header/Header.jsx","Components/Items/Item/Item.jsx","Components/Items/Description/Description.jsx","Components/Items/Items.jsx","Redux/items-reducer.jsx","Components/Items/ItemsContainer.jsx","Components/Sidebar/Sidebar.jsx","Redux/sidebar-reducer.jsx","Components/Sidebar/SidebarContainer.jsx","App.js","serviceWorker.js","Redux/redux-store.jsx","index.js"],"names":["module","exports","itemName","item","flexItemsContainer","titleContainer","textContainer","title","sidebar","link","active","startImage","header","__webpack_require__","p","Header","props","react_default","a","createElement","className","cls","Item","itemsElements","soul","map","e","react_router_dom","onClick","newSoulPath","path","to","name","Description","descriptionId","pathArray","nameArray","descriptionArray","description","n","length","i","soulPath","history","goBack","Items","react_router","exact","render","src","kolo","Items_Item_Item","Items_Description_Description","initialState","oak","id","birchtree","ash","willow","alder","tree","currentSoulPath","itemsReducer","state","arguments","undefined","action","type","Object","objectSpread2","WithRouterItems","withRouter","ItemsContainer","connect","currentSoul","currentPath","items","appletree","aspen","cherry","juniper","nut","rowan","dispatch","newSoulPathAC","Sidebar","sidebarElements","trees","newPath","activeClassName","sidebarReducer","SidebarContainer","pathAC","App","Components_Header_Header","Sidebar_SidebarContainer","Items_ItemsContainer","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3da0dfcb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemName\":\"Item_itemName__21OY5\",\"item\":\"Item_item__Ap_SA\",\"flexItemsContainer\":\"Item_flexItemsContainer__WbFZG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleContainer\":\"Description_titleContainer__3MD55\",\"textContainer\":\"Description_textContainer__H49G1\",\"title\":\"Description_title__3taO1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__o3vx0\",\"link\":\"Sidebar_link__3s8y7\",\"active\":\"Sidebar_active__1ze7r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexItemsContainer\":\"Items_flexItemsContainer__1mdMM\",\"startImage\":\"Items_startImage__4Ayrq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__39C1d\"};","module.exports = __webpack_public_path__ + \"static/media/kolo.c50156ab.png\";","module.exports = __webpack_public_path__ + \"static/media/Gabriela-Regular.b4856923.ttf\";","import React from 'react';\r\nimport cls from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={cls.header}>\r\n            <i className='fa fa-2x fa-pagelines'/>\r\n            <p>Виды и описание деревьев</p>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport cls from './Item.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Item = (props) => {\r\n\r\n    let itemsElements = props.soul\r\n        .map(e => (\r\n            <NavLink onClick={(p) => {\r\n                props.newSoulPath(e.path)\r\n            }} className={cls.item} to={props.path + e.path}>\r\n                <p className={cls.itemName}>{e.name}</p>\r\n            </NavLink>\r\n        ));\r\n\r\n    return (\r\n\r\n        <div className={cls.flexItemsContainer}>\r\n            {itemsElements}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport cls from './Description.module.css';\r\n\r\n\r\nconst Description = (props) => {\r\n\r\n    let descriptionId;\r\n    let pathArray = props.soul.map(e => (e.path));\r\n    let nameArray = props.soul.map(e => (e.name));\r\n    let descriptionArray = props.soul.map(e => (e.description));\r\n    let n = pathArray.length;\r\n    for (let i = 0; i <= n; i++) {\r\n        if (props.soulPath === pathArray[i]) {\r\n            descriptionId = i\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={cls.titleContainer}>\r\n                <i onClick={() => {\r\n                    props.history.goBack()\r\n                }} className=\"fa fa-2x fa-times\"></i>\r\n                <h2 className={cls.title}>{nameArray[descriptionId]}</h2>\r\n            </div>\r\n            <div className={cls.textContainer}>\r\n                {descriptionArray[descriptionId]}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Description;\r\n","import React from 'react';\r\nimport cls from './Items.module.css';\r\nimport {Route} from 'react-router-dom';\r\nimport Item from './Item/Item';\r\nimport Description from './Description/Description';\r\nimport kolo from '../../Assets/images/kolo.png';\r\n\r\n\r\nconst Items = (props) => {\r\n    return (\r\n\r\n        <div>\r\n            <div className={cls.flexItemsContainer}>\r\n                    <Route exact path={props.path} render=\r\n                        {() => {\r\n                            if (props.path === '') {\r\n                                return <img className={cls.startImage} src={kolo}/>\r\n                            }\r\n                            else {\r\n                                return <Item path={props.path} soul={props.soul} newSoulPath={props.newSoulPath}/>}}}/>\r\n\r\n                    <Route exact path={props.path + props.soulPath} render=\r\n                        {() => {\r\n                            if  (props.soulPath === '') {\r\n                                return <div></div>\r\n                            }\r\n                            else {\r\n                                return <Description history={props.history} soul={props.soul}\r\n                                                    soulPath={props.soulPath}/>\r\n                            }\r\n                        }}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Items;\r\n","let initialState = {\r\n    oak: [\r\n        {id: 1, path: \"/stone\", name: \"Каменный\", description: \"Вечнозеленые деревья данного вида отличаются стойкостью к низким температурам и засухе. В высоту дуб достигает 25 метров, характерно формирование широкой ветвистой кроны и мощного ствола насыщенного серого цвета. Длина глянцевых темно-зеленых листьев не превышает 8 см. Листья могут иметь цельную или изменчивую форму, тыльная сторона окрашена в желтоватый или беловатый цвет, возможна незначительная ворсистость. Высаживать каменные дубы можно в любую почву на площадках любой освещенности.\"},\r\n        {id: 2, path: \"/red\", name: \"Красный\", description: \"Дерево имеет стройную форму, достигая 25 метров в высоту. Крону, напоминающую по форме шатер, формируют блестящие листья, имеющие заостренные лопасти, глубокие выемки и длину до 20 см. Окрас листьев изменяется в зависимости от времени года и возраста дуба: в весенне-летнюю пору цвет варьируется от красноватого до темно-зеленого, в осенний период становится шарлахово-красным и буровато-коричневым у молодых и взрослых деревьев соответственно. Данный вид широко используется при озеленении улиц, формировании аллей в виде групповых массивов или солитеров. \"},\r\n        {id: 3, path: \"/cherry\", name: \"Черешчатый\", description: \"Данный вид получил максимальное распространение в ландшафтном дизайне, является составным элементом хвойно-широколиственных лесных массивов. Лучше всего растет в питательных почвах на открытых площадках с достаточной освещенностью, хорошо переносит засушливую и ветреную погоду, не любит переувлажнения. Высота взрослого дерева может достигать 50 метров. При выращивании в составе групповых посадок имеет высокопосаженную крону и стройный длинный ствол, при использовании в качестве солитера крона становится широкой и имеет низкую посадку. Для кожистых листьев с максимальной длиной 15 см характерна обратнояйцевидная или продолговатая форма с незаостренными лопастями (не более 7).\"},\r\n        {id: 4, path: \"/chestnut\", name: \"Каштанолистный\", description: \"Относится к видам, занесенным в Красную книгу. Дерево отличается наличием широкой имеющей форму шатра кроны, способно достигать в высоту 30 м. Массивные листья (длина – порядка 18 см) с заостренными треугольными зубцами по форме напоминают листву посевного каштана. Верхняя часть листа окрашена в темно-зеленый, а нижняя – в светло-зеленый цвет (присутствует короткий ворс). Особенностью каштанолистного дуба является быстрый рост, морозостойкость. Лучше всего растет во влажной почве. \"},\r\n               ],\r\n    birchtree: [\r\n        {id: 1, path: \"/fluffy\", name: \"Пушистая\", description: \"Растет береза пушистая в лесах Восточной и Западной Сибири, Кавказа, Европейской части России, Западной Европы. Это дерево растет до 15-23 метров высотой, ствол белого цвета, в основании не образует темную корку. У молодых ветвей кора красно-бурого, потом она приобретает чисто-белый цвет. Крона широковетвистая, яйцевидной формы. Листья и молодые побеги покрыты густым пушком. Листва блестящая, размером до 6 см , молодые листочки душистые и клейкие. У березы пушистой семена долго держатся в сережках. Хорошо себя чувствует на холодных и заболоченных почвах, к свету береза не требовательна, любит тень. Размножается береза пушистая семенами.\"},\r\n        {id: 2, path: \"/weeping\", name: \"Плакучая\", description: \"Средний возраст жизни этого дерева составляет примерно 150 лет. Темп роста – довольно быстрый, и за относительно не долгий период жизни дерево достигает высоты 30 метров при диаметре ствола 60-80 см. Крона у березы плакучей зонтиковидной формы. В период цветения появляются желтовато-зеленые сережки, которые продолжают цвести до распускания листьев. Сами же листья округлые, до 2 см. в диаметре темно-зеленого цвета. Нетребовательна к почве, но очень чувствительна к засухам. Размножается прививанием.\"},\r\n        {id: 3, path: \"/small_leaved\", name: \"Мелколистная\", description: \"Береза мелколистная относится к семейству березовых и достигает высоты 15 метров. Нередко растет в виде корявого кустарника. Имеет отличительную от всех березовых желтовато-розового, а иногда розового цвета кору. Отлично чувствует себя как на пустынных долинах горных рек, так и на болотах Алтая. Размножается это дерево с помощью черенков, семян и прививок. Всхожесть семян очень низкая. Она не требовательна к почве, на которой растет, а также к прямым солнечным лучам. Очень хорошо переносит зимние морозы и весенние заморозки.\"},\r\n        {id: 4, path: \"/dwarf'\", name: \"Карликовая\", description: \"Карликовая береза – это вид растений рода Берёза семейства Берёзовые. Близкая родственница березы обыкновенной. Представляет собой кустарник с большим количеством ветвей. Вышина кустарника обычно не превышает одного метра, а ширина его кроны может достигать полутора метра. Имеет мелкие и круглые листья темно-зеленого сверху и светло-зеленого снизу цвета. Иногда бывает такого малого роста, что на плоскости лишайника можно увидеть только листья. К стеблям листья крепятся с помощью коротких черешков. \"},\r\n        ],\r\n    ash: [\r\n        {id: 1, path: \"/simple\", name: \"Обыкновенный\", description: \"Ясень обыкновенный – это наиболее известный вид этого растения. Дерево достаточно крупное, 20-40 метров в высоту, 10-25 метров в ширину. Относится к быстрорастущим видам, в год может вырасти на 60-80 см. Листва у ясеня обыкновенного появляется поздно, состоят из пяти листочков зеленого цвета. Крона у дерева широкоовальной формы, ажурная. Ветви прямые, малоразветвленные. У молодого дерева кора пепельно-серая, гладкая, позже она становится немного трещиноватой. Цветы ясеня обыкновенного невзрачные, плоды – крылатки, остаются всю зиму на дереве. \"},\r\n        {id: 2, path: \"/fluffy\", name: \"Пушистый\", description: \"Ясень пушистый или, как его еще называют, пенсильванский произрастает в Северной Америке. Растет ясень пушистый в основном по берегам водоемов. Высота ясеня составляет 20 метров. Крона неправильной формы, раскидистая. Побеги опушенные, буро-коричневые. Листья состоят из 5-8 зеленых листочков, цветки невзрачные, собраны в пучки. Плод — узкая крылатка. К плодородным почвам менее требователен, но любит влагу. Ясень пушистый самый морозостойкий вид. Ясень пушистый лучше, чем ясень обыкновенный переносит городские условия.\"},\r\n        {id: 3, path: \"/angustifolius'\", name: \"Узколистный\", description: \"Ясень узколистный растет с широкой узорчатой кроной. Вырастает дерево до 30 метров в высоту. Листва на дереве появляется поздно. Кора у дерева светло-бурого цвета. Собранные в кисти цветки появляются раньше листьев. Плод – крылатка, копьевидной формы. Произрастает ясень узколистный во влажных лесах, в рыхлой почве. Цветет дерево в мае. Ясень узколистный светолюбив, газоустойчив и дымоустойчив. Древесина у дерева желтовато-белая с красивым волнистым рисунком, плотная. Этот вид ясеня очень плохо переносит даже незначительные морозы. Размножение происходит черенками.\"},\r\n        {id: 4, path: \"/white\", name: \"Белый\", description: \"Дерево относительно не большое, растет до 6-10 метров в высоту и до 4-6 метров в ширину. Ясень белый медленнорастущее дерево, с правильной, плотной кроной, округлой формы. Цветки у этого ясеня душистые, белого цвета, собраны они в довольно густые метелки, до 15 см длиной. Ясень белый не плодоносит. Листья продолговато-яйцевидной формы, зеленого цвета, распускается поздно. Корневая система ясеня белого чувствительна к уплотнению почвы. Дерево хорошо растет на солнце и в полутени, в затененных местах практически не цветет. \"},\r\n        ],\r\n    willow: [\r\n        {id: 1, path: \"/goatskin\", name: \"Козья\", description: \"Ива козья, бредина или ракита – это небольшое дерево или кустарник высотой 6 – 10 м, растет на прогалинах, возле ручьев или в лесу. Кора молодых веточек зеленовато-бурого цвета, позже она становится трещиноватая и бурая. Ветви толстые, раскидистые, молодые сероопушенные, позже бурые, серые или темные, узловатые. Прилистники почковидные длиной 4–7 мм, пильчатые и лопастные, рано опадают. Черешки длиной до 2 см, к основанию сильно расширенные. Почки на молодых побегах крупные, опушенные, серого цвета. Листья продолговато-овальные, зубчатые, с блестящей темно-зеленой верхней стороной и серой пушистой нижней. Цветки – сережки, желтовато-серого цвета, собраны в свисающие кисти. Плод ивы козьей, представляет собой коробочку с волнистыми и серыми семенами. \"},\r\n        {id: 2, path: \"/weeping\", name: \"Плакучая\", description: \"Ива с сережками плакучая – это широкий крупный раскидистый кустарник, высотой до 3-4 метров. Переплетающиеся извилистые побеги, кора у них красно-коричневого цвета. Листья темно-зеленого цвета, блестящие, глянцевые сверху, голубовато-зеленого цвета снизу. Форма листьев ланцетная. Цветки – сережки, серебристого оттенка, густо покрывают ветки, распускаются рано. Цветение происходит в конце апреля – начале мая. Ива с сережками плакучая зимостойкое, светолюбивое растение. Предпочитает прохладный климат, устойчиво к сильным ветрам. Размножается черенкованием.\"},\r\n        {id: 3, path: \"/white'\", name: \"Белая\", description: \"Ива белая – это довольно крупное дерево, вырастает до 20-25 метров в высоту. Ствол у дерева мощный, кора серого цвета, трещиноватая. Молоденькие ветви тонкие, свисающие, кончики у них опушенные. Старые ветви блестящие, голые, желтых или красновато-бурых оттенков. Листья очередные, до 15 см длиной. Молодые листочки беловато-шелковистые, потом они становятся темно-зеленого цвета сверху, снизу опушенные серебристые. Цветки сережки распускаются вместе с листьями. Растет ива белая довольно быстро. Дерево морозостойкое, светолюбивое, к почвам не особо требовательно. Размножается ива белая вегетативно и семенами.\"},\r\n        {id: 4, path: \"/yellow\", name: \"Желтая\", description: \"Ива желтая плакучая вырастает до 15 метров в высоту. Форма молодого дерева коническая, позже она становится широкоокруглая. Ива желтая плакучая растет медленно. Цветки розового цвета, постепенно краснеют. Цветет ива желтая обильно, до или вместе с распусканием листьев. Цветение происходит в мае. Листья эллиптической или продолговатой формы, до 13 см длиной, острозубчатые по краю. Корневая система ивы желтой плакучей поверхностная, отпрысков она не образует. Дерево чувствительно к утоплению почвы. Любит полутень и солнце. Ива желтая плакучая зимостойка, чувствительна к ветру, предпочитает влажную плодородную почву или относительно сухую.\"},\r\n            ],\r\n    alder: [\r\n        {id: 1, path: \"/grey\", name: \"Серая\", description: \"Ольха серая или белая также может быть как деревом, так и кустарником. Темп роста молодого дерева очень низкий, но с возрастом он увеличивается. Максимальная высота роста растения составляет 20 метров. Кора гладкая на ощупь и окрашена в серо-коричневый цвет. Диаметр ствола зрелого дерева составляет 50-70 сантиметров. Ольха серая или белая имеет немного заостренные в конце листья, которые сверху голые и имеют зеленый цвет, а снизу припушеные и имеют серо-зеленый цвет. Дерево имеет поверхностную корневую систему, нетребовательную к почве и является зимостойким растением.\\n\"},\r\n        {id: 2, path: \"/black\", name: \"Черная\", description: \"Это дерево было найдено во Франции 1819 году. Некоторые экземпляры этого растения могут достигать 20 метров в высоту и 6 метров в ширину. Дерево имеет кору черно-коричневого цвета, а побеги в молодости липкие. В период вегетации растение покрывается тупо-лопастными остроконечными листьями, которые имеют длину 10 сантиметров. В период цветения появляются мужские соцветья красновато-коричневого цвета и женские соплодия – шишечки. Корневая система дерева поверхностная, которая отлично переносит затопление и длительные морозы.\"},\r\n        {id: 3, path: \"/green'\", name: \"Зеленая\", description: \"Дерево из семейства березовых. У молодых побегов кора красно-бурого цвета, а у взрослых она темно-серая. Листья яйцевидной формы, сужены к верху, длиной до 10 см , а шириной до 7 см . С верху листья глянцевые или матовые, темно-зеленого цвета, снизу они светлее, имеют смолистый клейкий налет. Ольха зеленая хорошо растет на супесчаных, торфяных, глинистых, щебнистых почвах. Это растение светолюбивое, влаголюбивое, устойчиво к низким температурам. Ольха зеленая вырастает до 6-12 метров в высоту. Размножается дерево семенами и черенками.\"},\r\n        {id: 4, path: \"/gold\", name: \"Золотистая\", description: \"Ольха золотистая дерево стройное, относится к семейству березовых. Дерево вырастает до 20 метров в высоту. Крона у ольхи золотистой широкая округлая иногда коническая. Молодые листья ольхи золотисто-зеленого цвета, потом они становятся желтовато-зелеными. Кора у дерева темно-бурого цвета, на молодых побегах – зеленовато-бурая. Листья яйцевидной или округлой формы, края зубчатые. Цветки представляют собой мужские сережки, красновато-коричневого цвета, женские – шишечки, остаются на дереве даже после опадания листвы. Мужские сережки появляются в марте. Густая, поверхностная корневая система ольхи золотистой переносит затопление. Это растение обогащает почву азотом. Ольха зимостойка, чувствительна к засухе. Размножается семенами и черенками.\"},\r\n       ],\r\n    tree: [\r\n        {id: 1, path: \"/simple\", name: \"Обыкновенная\", description: \"Конусовидная крона с поникающими или отстоящими ветвями остается острой в течение всего периода жизни. Кора коричневая, шероховатая, трещиноватая. Побеги бурые, рыжие или рыжевато-желтые, голые или редковолосистые. Почки длиной 4–5 мм, яйцевидно-конусовидной формы, светло-коричневого оттенка. \"},\r\n        {id: 2, path: \"/siberian\", name: \"Сибирская\", description: \"ль сибирская — крупное дерево из рода Ель, лесообразующая порода во многих регионах северной Европы, также произрастает в Сибири, Монголии и Китае. У ели сибирской узкопирамидальная или пирамидальная крона, короткая и колючая хвоя, мелкие шишки. Плодоношение у ели сибирской начинается в возрасте не менее двадцати лет, семена появляются с интервалом в несколько сезонов. В культуре эта ель встречается довольно редко, так как она требует повышенной влажности и постоянно увлажненной питательной почвы, кроме того, ель сибирская часто повреждается насекомыми.\"},\r\n        {id: 3, path: \"/red'\", name: \"Красная\", description: \"Ель красная — крупное хвойное дерево родом из Северной Америки. Вырастают эти ели до сорока метров в высоту, диаметр их ствола может достигать полутора метров. Хвоя у ели красной около сантиметра в длину, желто-зеленого цвета, блестящая, шишки небольшие, красновато-коричневого цвета. Почки у этого растения распускаются позже других видов рода, лишь в конце мая. Ель красная зимостойка, плохо переносит сухость почвы, требует обильного полива. Эта ель часто используется при озеленении участков в групповых композициях, может использоваться и в одиночных посадках.\"},\r\n        {id: 4, path: \"/serbian\", name: \"Сербская\", description: \"Ель сербская — довольно редкий в природе вид деревьев рода Ель, произрастающий на небольших территориях в Сербии и Боснии. В культуре ель сербская распространена очень широко, особенно популярны ее карликовые формы. Эта ель вырастает до тридцати метров в высоту, ее крона узкопирамидальная, колонновидная. Хвоя у ели сербской до двух сантиметров длиной, сине-зелёная сверху и голубоватая снизу, шишки до семи сантиметров длиной, веретенообразные, темные. Ель сербская относительно неприхотлива к почвенным, климатическим условиям, зимостойка.\"},\r\n        ],\r\n    currentSoulPath:''\r\n};\r\n\r\nexport const newSoulPathAC = (path) => ({type: 'NEW_SOUL_PATH', newSoulPath: path});\r\n\r\n\r\nconst itemsReducer = (state = initialState,action) => {\r\n\r\n    if (action.type === 'NEW_SOUL_PATH') {\r\n        return {\r\n            ...state, currentSoulPath: action.newSoulPath\r\n        }\r\n    } else {\r\n        return {...state}\r\n    }\r\n};\r\n\r\nexport default itemsReducer;","import Items from './Items';\r\nimport {connect} from \"react-redux\";\r\nimport {newSoulPathAC} from \"../../Redux/items-reducer\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n        let currentSoul;\r\n        let path = state.sidebar.currentPath;\r\n        let soulPath = state.items.currentSoulPath;\r\n\r\n         switch (path) {\r\n            case '/oak':\r\n                currentSoul = state.items.oak;\r\n                break;\r\n            case '/ash':\r\n                currentSoul = state.items.ash;\r\n                break;\r\n            case '/alder':\r\n                currentSoul = state.items.alder;\r\n                break;\r\n             case '/appletree':\r\n                 currentSoul = state.items.appletree;\r\n                 break;\r\n             case '/aspen':\r\n                 currentSoul = state.items.aspen;\r\n                 break;\r\n             case '/cherry':\r\n                 currentSoul = state.items.cherry;\r\n                 break;\r\n             case '/birchtree':\r\n                 currentSoul = state.items.birchtree;\r\n                 break;\r\n             case '/juniper':\r\n                 currentSoul = state.items.juniper;\r\n                 break;\r\n             case '/nut':\r\n                 currentSoul = state.items.nut;\r\n                 break;\r\n             case '/rowan':\r\n                 currentSoul = state.items.rowan;\r\n                 break;\r\n             case '/tree':\r\n                 currentSoul = state.items.tree;\r\n                 break;\r\n             case '/willow':\r\n                 currentSoul = state.items.willow;\r\n                 break;\r\n             default: currentSoul = state.items.oak ;\r\n        }\r\n        return {\r\n            soul: currentSoul,\r\n            soulPath: soulPath,\r\n            path: path\r\n        }\r\n    };\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        newSoulPath: (path) => {\r\n\r\n            dispatch(newSoulPathAC(path));\r\n        }\r\n    }\r\n};\r\n\r\nlet WithRouterItems = withRouter(Items)\r\n\r\nconst ItemsContainer = connect(mapStateToProps, mapDispatchToProps)(WithRouterItems);\r\n\r\nexport default ItemsContainer;\r\n","import React from 'react';\r\nimport cls from './Sidebar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Sidebar = (props) => {\r\n\r\n    let sidebarElements = props.trees\r\n        .map(e => (<NavLink onClick={(p)=>{props.newPath(e.path)}}\r\n                            className={ cls.link} to={e.path}\r\n                            activeClassName={cls.active}>\r\n            {e.name}\r\n        </NavLink>));\r\n    return (\r\n        <div className={cls.sidebar}>\r\n            {sidebarElements}\r\n        </div>\r\n    )\r\n};\r\nexport default Sidebar;","let initialState = {\r\n    trees: [\r\n        {id: 1, path: \"/oak\", name: \"Дуб\"},\r\n        {id: 2, path: \"/birchtree\", name: \"Береза\"},\r\n        {id: 3, path: \"/ash\", name: \"Ясень\"},\r\n        {id: 4, path: \"/willow\", name: \"Ива\"},\r\n        {id: 5, path: \"/alder\", name: \"Ольха\"},\r\n        {id: 4, path: \"/tree\", name: \"Ель\"}],\r\n    currentPath: ''\r\n\r\n};\r\n\r\nexport const pathAC = (path) => ({type: 'NEW_PATH', newPath: path});\r\n\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    if (action.type === 'NEW_PATH') {\r\n        return {\r\n            ...state, currentPath: action.newPath\r\n    }\r\n    } else {\r\n        return {...state}\r\n    }\r\n};\r\n\r\n\r\nexport default sidebarReducer;","import Sidebar from './Sidebar';\r\nimport {connect} from 'react-redux';\r\nimport {pathAC} from './../../Redux/sidebar-reducer';\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        trees: state.sidebar.trees\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        newPath: (path) => {\r\n\r\n            dispatch( pathAC(path) );\r\n        }\r\n}\r\n};\r\n\r\nconst SidebarContainer = connect(mapStateToProps,mapDispatchToProps)(Sidebar);\r\n\r\nexport default SidebarContainer;\r\n","import React from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport ItemsContainer from './Components/Items/ItemsContainer';\nimport SidebarContainer from './Components/Sidebar/SidebarContainer';\n\n\nfunction App(props) {\n\n    return (\n        <div className=\"App\">\n            <Header/>\n            <div className=\"flexContainer\">\n                <div className=\"sidebar\">\n                    <SidebarContainer/>\n                </div>\n                <div className=\"mainContainer\">\n                    <ItemsContainer/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers, createStore} from \"redux\";\r\nimport itemsReducer from \"./items-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n\r\n    sidebar:sidebarReducer,\r\n    items:itemsReducer\r\n\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from 'react-redux';\nimport store from './Redux/redux-store';\nimport './Assets/fonts/Gabriela-Regular.ttf';\n\nReactDOM.render(\n\n    <BrowserRouter  >\n        <Provider store={store}>\n    <App />\n        </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}